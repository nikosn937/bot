import streamlit as st
import pandas as pd
from io import StringIO
# Εδώ δεν χρειάζεται η unidecode

# --------------------------------------------------------------------------------
# 1. ΕΝΣΩΜΑΤΩΜΕΝΟ DATA SOURCE
# --------------------------------------------------------------------------------

CSV_DATA = """Keyword,Response
Μαθηματικά,"Εργασία Μαθηματικών: Άσκηση 33, σελίδα 45. Προθεσμία: Παρασκευή."
Φυσική,"Διαγώνισμα Φυσικής την Τρίτη 25/10. Ύλη: Ενότητες 1 & 2."
Ιστορία,"Εργασία Ιστορίας: Ανάγνωση Κεφαλαίου 5 και σημειώσεις."
Τέχνη,"Να φέρετε τέσσερα μολύβια διαφορετικής σκληρότητας (B, 2B, H, 2H)."
Εξετάσεις,"Οι εξετάσεις αρχίζουν την 1η Ιουνίου. Θα αναρτηθεί πρόγραμμα σύντομα."
Ωράριο,"Το μάθημα τελειώνει στις 14:00 σήμερα, λόγω γιορτής."
Εκδρομή,"Η εκδρομή θα γίνει την Τετάρτη 15/11. Κόστος: 15€. Να φέρετε την εξουσιοδότηση μέχρι την Παρασκευή."
Ταμείο,"Το ταμείο της τάξης έχει υπόλοιπο 85€. Η επόμενη πληρωμή (5€) είναι στις 3/11."
Εκδηλώσεις,"Την Παρασκευή 27/10 θα πραγματοποιηθεί η σχολική γιορτή για την 28η Οκτωβρίου. Προσέλευση 8:30 π.μ. και αποχώρηση 10:00 π.μ."
Απουσίες,"Ο μέγιστος επιτρεπόμενος αριθμός απουσιών είναι 114. Για τον τρέχοντα μήνα, η τάξη μας έχει 12 αδικαιολόγητες απουσίες συνολικά."
Βιβλιοθήκη,"Η βιβλιοθήκη είναι ανοιχτή κάθε Τετάρτη (13:00-14:00). Το βιβλίο 'Ο μεγάλος περίπατος του Πέτρου' πρέπει να επιστραφεί άμεσα."
Ανακοινώσεις,"Υπενθυμίζεται σε όλους τους μαθητές η απαγόρευση χρήσης κινητών τηλεφώνων κατά τη διάρκεια των μαθημάτων."
"""

# --------------------------------------------------------------------------------
# 2. ΒΟΗΘΗΤΙΚΗ ΣΥΝΑΡΤΗΣΗ (ΧΩΡΙΣ unidecode)
# --------------------------------------------------------------------------------

TONES_MAP = str.maketrans("άέήίόύώ", "αεηιουω")

def normalize_keyword(keyword):
    """Μετατρέπει τη λέξη-κλειδί σε πεζά και αφαιρεί τους τόνους με ενσωματωμένη μέθοδο."""
    if pd.isna(keyword):
        return ''
    normalized = str(keyword).lower().strip()
    # Εφαρμόζει την αφαίρεση τόνων
    return normalized.translate(TONES_MAP)


# --------------------------------------------------------------------------------
# 3. ΦΟΡΤΩΣΗ ΚΑΙ ΕΠΕΞΕΡΓΑΣΙΑ ΔΕΔΟΜΕΝΩΝ
# --------------------------------------------------------------------------------

try:
    df = pd.read_csv(StringIO(CSV_DATA))
    
    df.columns = df.columns.str.strip()
    
    if 'Keyword' not in df.columns or 'Response' not in df.columns:
        raise ValueError("Σφάλμα: Λείπουν οι επικεφαλίδες 'Keyword' ή 'Response'.")
    
    df['Normalized_Keyword'] = df['Keyword'].apply(normalize_keyword)
    
    data_source_dict = df.set_index('Normalized_Keyword')['Response'].to_dict()
    
    available_keys_display = sorted(df['Keyword'].unique())
    
except Exception as e:
    st.error(f"Κρίσιμο Σφάλμα Φόρτωσης: Η εφαρμογή δεν μπορεί να ξεκινήσει. Παρακαλώ ελέγξτε το αρχείο σας. Λεπτομέρειες: {e}")
    data_source_dict = {}
    available_keys_display = []

# --------------------------------------------------------------------------------
# 4. UI / ΛΟΓΙΚΗ
# --------------------------------------------------------------------------------

st.set_page_config(page_title="Βοηθός Τάξης (Τελική Έκδοση)", layout="centered")
st.title("🤖 Ψηφιακός Βοηθός Τάξης")
st.markdown("---")

info_message = f"Γεια! Είμαι ο βοηθός σου. Δοκίμασε μία από τις λέξεις-κλειδιά: **{', '.join(available_keys_display)}**"
st.info(info_message)

# Το input δεν χρειάζεται πλέον session_state
user_input = st.text_input(
    'Τι θέλεις να μάθεις;', 
    placeholder='Πληκτρολόγησε π.χ. Μαθηματικά, Εκδρομή...'
)

if st.button('Αναζήτηση') or user_input: # Ελέγχουμε αν υπάρχει είσοδος
    
    if user_input: # Επιβεβαιώνουμε ότι ο χρήστης έχει πληκτρολογήσει κάτι
        processed_input = normalize_keyword(user_input)
        
        if processed_input in data_source_dict:
            # Επιτυχία
            bot_response = data_source_dict[processed_input]
            st.success(f"**Απάντηση:** {bot_response}")
            
            # ΔΕΝ ΕΙΝΑΙ ΠΛΕΟΝ ΕΔΩ: st.session_state.search_query = ""
            # ΔΕΝ ΕΙΝΑΙ ΠΛΕΟΝ ΕΔΩ: st.rerun()
            
        else:
            # Αποτυχία
            st.warning(
                f"Δεν βρέθηκε απάντηση για το: '{user_input}'. Δοκίμασε μία από τις διαθέσιμες λέξεις-κλειδιά: **{', '.join(available_keys_display)}**."
            )

st.markdown("---")
st.caption("Η εφαρμογή χρησιμοποιεί Python/Streamlit με ενσωματωμένα δεδομένα.")
